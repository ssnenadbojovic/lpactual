"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var isString = require("lodash.isstring");
var isPlainObject = require("lodash.isplainobject");
var isNumber = require("lodash.isnumber");
var isBoolean = require("lodash.isboolean");
var isArray = require("lodash.isarray");
function object(schema) {
    return function (value) {
        if (!isPlainObject(value)) {
            return false;
        }
        for (var key in schema) {
            if (!schema[key](value[key])) {
                return false;
            }
        }
        return true;
    };
}
exports.object = object;
function objectMapOf(fn) {
    return function (value) {
        if (!isPlainObject(value)) {
            return false;
        }
        for (var key in value) {
            if (!fn(value[key])) {
                return false;
            }
        }
        return true;
    };
}
exports.objectMapOf = objectMapOf;
function string() {
    return function (value) {
        return isString(value);
    };
}
exports.string = string;
function number() {
    return function (value) {
        return isNumber(value);
    };
}
exports.number = number;
function gt(n) {
    return function (value) {
        return isNumber(value) && value > n;
    };
}
exports.gt = gt;
function gte(n) {
    return function (value) {
        return isNumber(value) && value >= n;
    };
}
exports.gte = gte;
function lt(n) {
    return function (value) {
        return isNumber(value) && value < n;
    };
}
exports.lt = lt;
function lte(n) {
    return function (value) {
        return isNumber(value) && value <= n;
    };
}
exports.lte = lte;
function optional(fn) {
    return function (value) {
        if (value === undefined) {
            return true;
        }
        else {
            return fn(value);
        }
    };
}
exports.optional = optional;
function maxLen(len) {
    return function (value) {
        if (!isArray(value)) {
            return false;
        }
        if (value.length > len) {
            return false;
        }
        return true;
    };
}
exports.maxLen = maxLen;
function array(fn) {
    return function (value) {
        if (!isArray(value)) {
            return false;
        }
        for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {
            var item = value_1[_i];
            if (!fn(item)) {
                return false;
            }
        }
        return true;
    };
}
exports.array = array;
function boolean() {
    return function (value) {
        return isBoolean(value);
    };
}
exports.boolean = boolean;
function any() {
    return function (value) {
        return true;
    };
}
exports.any = any;
function equal(option) {
    return function (value) {
        return value === option;
    };
}
exports.equal = equal;
function some() {
    var options = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        options[_i] = arguments[_i];
    }
    return function (value) {
        return options.some(function (option) { return value === option; });
    };
}
exports.some = some;
function every() {
    var options = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        options[_i] = arguments[_i];
    }
    return function (value) {
        return options.every(function (option) { return value === option; });
    };
}
exports.every = every;
function or(x, y) {
    return function (value) {
        return x(value) || y(value);
    };
}
exports.or = or;
function and(x, y) {
    return function (value) {
        return x(value) && y(value);
    };
}
exports.and = and;
//# sourceMappingURL=index.js.map